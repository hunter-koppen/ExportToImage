// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";
import domtoimage from 'dom-to-image'

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * ClassToImage takes a classname and an Image object as input and saves whatever content there is inside the class element to the image in png format.
 * 
 * To make this action work the following dependency needs to be installed. To do that, run the following commands in the folder where this javascript action is placed.
 * 
 * 1. npm install dom-to-image
 * 2. npm i --save-dev @types/dom-to-image
 * @param {string} className
 * @param {MxObject} image
 * @param {string} imageName
 * @returns {Promise.<void>}
 */
export async function ClassToImage(className, image, imageName) {
	// BEGIN USER CODE
	let element = document.querySelector("." + className);
	return new Promise(async (resolve, reject) => {
		try {
			domtoimage.toBlob(element)
				.then(function (blob) {
					mx.data.saveDocument(image.getGuid(), imageName + ".png", {}, blob, () => resolve(true), reject);
				})
				.catch(function (error) {
					reject(new Error(error));
				});
		} catch (error) {
			reject(new Error(error));
		}
	});
	// END USER CODE
}
